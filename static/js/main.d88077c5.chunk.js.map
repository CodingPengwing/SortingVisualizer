{"version":3,"sources":["styles/Selector.module.scss","styles/App.module.scss","SortingVisualizer/SortingVisualizer.module.scss","styles/NavBar.module.scss","sortingAlgorithms/util.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/cocktailShakerSort.js","sortingAlgorithms/gnomeSort.js","sortingAlgorithms/heapSort.js","sortingAlgorithms/insertionSort.js","sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/quickSortOptimized.js","sortingAlgorithms/selectionSort.js","sortingAlgorithms/shellSort.js","sortingAlgorithms/timSort.js","sortingAlgorithms/bogoSort.js","sortingAlgorithms/introSort.js","components/WelcomeHeader.js","components/NavBar.js","components/SortingSelector.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","range","start","end","array","i","push","slice","randomIntFromInterval","min","max","Math","floor","random","isSorted","sorted","length","shuffle","j","temp","sort","props","sortedArray","addToHistory","highlights","bubbleSort","lowerLimit","upperLimit","cocktailShakerSort","gnomeSort","unshift","n","heapSize","maxHeapify","bottomUpHeapify","arrayCopy","shift","heapSort","leftChild","rightChild","largest","insertionSort","mergeSort","len","splitIdx","ceil","mergeArray","k","merge","quickSort","p","pivot","partition","pivotLeft","pivotRight","pivotIndex","mid","pivotRange","startIndex","minVal","minIndex","selectionSort","h","key","shellSort","minRun","r","calculateMinRun","size","split","timSort","permutations","perm","bogoSort","xs","output","rest","concat","console","log","styles","WelcomeHeader","className","welcomediv","delay","welcome2","Bar","navbar","author","icons","href","AiOutlineGithub","style","marginRight","styled","Button","color","backgroundColor","marginTop","padding","transition","StyledButton","fontFamily","fontSize","textAlign","textTransform","backgroundSize","width","boxShadow","cursor","backgroundImage","backgroundPosition","StyledButton2","PauseButton","ResumeButton","Selector","useState","inputType","setInputType","sortType","setSortType","changeInput","type","onChangeInput","changeSort","onChangeSort","container","sliders","sliderDropdown","Typography","gutterBottom","DropdownButton","id","title","Dropdown","Item","onClick","marginLeft","Slider","onChange","e","val","onChangeSize","defaultValue","disableSlider","valueLabelDisplay","disabled","step","onChangeSpeed","buttons","buttonStyle","pause","reset","ARRAY_SIZE","ANIMATION_SPEED","MAX_VALUE","highlighted","arrayBar","height","value","idx","Array","this","includes","bars","renderBar","React","Component","SortingVisualizer","state","timeoutIDArray","resumePoint","arrayState","history","updateState","setState","clearHistory","bind","doSort","onChangeArraySize","onChangeSortSpeed","generateRandomArray","generateSteadyArray","generateSortedArray","generateReverseSortedArray","generateUniformArray","generatePartialUniformArray","introSort","quickSortOptimized","gap","multipliers","values","firstState","arrLen","clearTimeout","timeoutID","setTimeout","animateHistory","arrayType","speed","count","arrayContainer","App","AppStyles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d88077c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Selector_container__16mQT\",\"selector\":\"Selector_selector__1MQWk\",\"sliders\":\"Selector_sliders__1TyW4\",\"sliderDropdown\":\"Selector_sliderDropdown__P4GCj\",\"buttons\":\"Selector_buttons__1scSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1WRqN\",\"welcomediv\":\"App_welcomediv__3oN30\",\"welcome\":\"App_welcome__OXuSE\",\"welcome2\":\"App_welcome2__1BAwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"SortingVisualizer_arrayContainer__2NigI\",\"arrayBar\":\"SortingVisualizer_arrayBar__15dpe\",\"buttons\":\"SortingVisualizer_buttons__1s4lX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2H47z\",\"author\":\"NavBar_author__1-cYJ\",\"icons\":\"NavBar_icons__25Y0D\"};","// Generates an array containing all integers between start (inclusive) and end (exclusive)\r\nexport function range(start, end) {\r\n    var array = [];\r\n    for (let i = start; i < end; i++) { \r\n        array.push(i); \r\n    }\r\n    return array.slice();\r\n}\r\n\r\n// Generates a random integer within the given interval\r\nexport function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n\r\n// Swap 2 elements at indices i and j in an array\r\nexport function swap(array, i, j) {\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n}\r\n\r\n// Checks whether an array is sorted\r\nexport function isSorted(array) {\r\n    let sorted = true;\r\n    for (let i = 0; i < array.length-1; i++) {\r\n        if (array[i] > array[i+1]) {\r\n            sorted = false;\r\n            break;\r\n        }\r\n    }\r\n    return sorted;\r\n}\r\n\r\n/* Randomize array in-place using Durstenfeld shuffle algorithm */\r\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\nexport function shuffle(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n","export function sort(props) {\r\n    const sortedArray = bubbleSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction bubbleSort(array, addToHistory) {\r\n    if (array.length <= 1) return array;\r\n    let sorted = false;\r\n    while (!sorted) {\r\n        sorted = true;\r\n        for (let i=1; i<array.length; i++) {\r\n            addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n            if (array[i-1] > array[i]) {\r\n                [array[i-1], array[i]] = [array[i], array[i-1]]\r\n                addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n                sorted = false;\r\n            }\r\n        }\r\n    }\r\n    return array;\r\n}","export function sort(props) {\r\n    const sortedArray = cocktailShakerSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction cocktailShakerSort(array, addToHistory) {\r\n    if (array.length <= 1) return array;\r\n\r\n    let sorted = false;\r\n    let i;\r\n    let lowerLimit = 0;\r\n    let upperLimit = array.length - 1;\r\n\r\n    while (!sorted && lowerLimit < upperLimit) {\r\n        sorted = true;\r\n        i = lowerLimit+1;\r\n        while (i <= upperLimit) {\r\n            addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n            if (array[i-1] > array[i]) {\r\n                [array[i-1], array[i]] = [array[i], array[i-1]]\r\n                sorted = false;\r\n                addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n            }\r\n            i++;\r\n        }\r\n        upperLimit--;\r\n        if (sorted) { break; }\r\n        \r\n        sorted = true;\r\n        i = upperLimit;\r\n        while (i > lowerLimit) {\r\n            addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n            if (array[i-1] > array[i]) {\r\n                [array[i-1], array[i]] = [array[i], array[i-1]]\r\n                sorted = false;\r\n                addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n            }\r\n            i--;\r\n        }\r\n        lowerLimit++;\r\n        if (sorted) { break; }\r\n    }\r\n\r\n    return array;\r\n}\r\n","export function sort(props) {\r\n    const sortedArray = gnomeSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction gnomeSort(array, addToHistory) {\r\n    if (array.length <= 1) return array;\r\n    let i = 1;\r\n    while (i < array.length) {\r\n        addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n        if (array[i-1] <= array[i]) { i++; }\r\n        else {\r\n            [array[i-1], array[i]] = [array[i], array[i-1]];\r\n            addToHistory({array: array.slice(), highlights: [i-1, i]});\r\n            if (i > 1) { \r\n                i--; \r\n            }\r\n        }\r\n    }\r\n    return array;\r\n}\r\n","export function sort(props) {\r\n    const sortedArray = heapSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction heapSort(array, addToHistory) {\r\n    if (array.length <= 1) return array;\r\n\r\n    // Add sentinel to top of list\r\n    array.unshift(null);\r\n    bottomUpHeapify(array, addToHistory);\r\n\r\n    let heapSize = array.length;\r\n    let arrayCopy;\r\n    for (let i=array.length-1; i>0; i--) {\r\n        // We have to remove the sentinel every time we add to history.\r\n        // All the highlight indices have -1 because of the sentinel.\r\n        arrayCopy = array.slice();\r\n        arrayCopy.shift();\r\n        addToHistory({array: arrayCopy, highlights: [1-1, i-1]});\r\n\r\n        [array[1], array[i]] = [array[i], array[1]];\r\n\r\n        arrayCopy = array.slice();\r\n        arrayCopy.shift();\r\n        addToHistory({array: arrayCopy, highlights: [1-1, i-1]});\r\n\r\n        heapSize -= 1;\r\n        maxHeapify(array, 1, heapSize, addToHistory);\r\n    }\r\n\r\n    // Remove the sentinel\r\n    array.shift();\r\n    return array;\r\n}\r\n\r\n// Turns the entire array into a heap\r\nfunction bottomUpHeapify(array, addToHistory) {\r\n    const n = array.length;\r\n    const heapSize = n;\r\n    for (let i=Math.floor(n/2); i>0; i--) {\r\n        maxHeapify(array, i, heapSize, addToHistory);\r\n    }\r\n}\r\n\r\n// Ensures that all elements related to index i satisfy the conditions of a heap.\r\nfunction maxHeapify(array, i, heapSize, addToHistory) {\r\n    // If this element has no children\r\n    if (i*2 >= heapSize) return;\r\n\r\n    let arrayCopy;\r\n    let leftChild = 2*i;\r\n    // rightChild = leftChild if this element only has one child\r\n    let rightChild = (2*i+1 < heapSize) ? 2*i+1 : leftChild;\r\n\r\n    // Remove the sentinel and add to history\r\n    arrayCopy = array.slice();\r\n    arrayCopy.shift();\r\n    addToHistory({array: arrayCopy, highlights: [i-1, leftChild-1, rightChild-1]});\r\n\r\n    let largest = i;\r\n    // Find the largest element between the parent, left and right children.\r\n    if (array[leftChild] > array[i]) {\r\n        largest = leftChild;\r\n    }\r\n    if (array[rightChild] > array[largest]) {\r\n        largest = rightChild;\r\n    }\r\n\r\n    // Swap elements if a child is bigger than the parent\r\n    if (largest !== i) {\r\n        [array[i], array[largest]] = [array[largest], array[i]];\r\n\r\n        arrayCopy = array.slice();\r\n        arrayCopy.shift();\r\n        addToHistory({array: arrayCopy, highlights: [i-1, largest-1]});\r\n        \r\n        // Heapify again for the child's children\r\n        maxHeapify(array, largest, heapSize, addToHistory);\r\n    }\r\n}\r\n","export function sort(props) {\r\n    const sortedArray = insertionSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction insertionSort(array, addToHistory) {\r\n    if (array.length <= 1) return array;\r\n    for (let i = 1; i < array.length; i++) {\r\n        let j = i - 1;\r\n        addToHistory({array: array.slice(), highlights: [j, i]});\r\n        while (j >= 0 && array[j] > array[j+1]) {\r\n            [array[j], array[j+1]] = [array[j+1], array[j]];\r\n            addToHistory({array: array.slice(), highlights: [j, j+1]});\r\n            j -= 1;\r\n        }\r\n    }\r\n    return array;\r\n}","import { range } from './util';\r\n\r\nexport function sort(props) {\r\n    const start = 0;\r\n    const end = props.array.length-1;\r\n    let sortedArray = mergeSort(props.array, start, end, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\n// start is the starting index of the array\r\n// end is the last index of the array (inclusive)\r\nfunction mergeSort(array, start, end, addToHistory) {\r\n    if (end <= start) return array;\r\n\r\n    // Split down the middle and recurse left, right\r\n    const len = end-start+1;\r\n    const splitIdx = Math.ceil(start + len/2);\r\n    mergeSort(array, start, splitIdx-1, addToHistory);\r\n    mergeSort(array, splitIdx, end, addToHistory);\r\n    merge(array, start, splitIdx, end, addToHistory);\r\n    return array;\r\n}\r\n\r\nfunction merge(array, start, splitIdx, end, addToHistory) {\r\n    if (end <= start) return array;\r\n\r\n    // Show the current section that's being sorted\r\n    addToHistory({array: array.slice(), highlights: range(start, end+1)});\r\n    let mergeArray = [];\r\n    let i = start, j = splitIdx;\r\n    while (i < splitIdx && j <= end) {\r\n        addToHistory({array: array.slice(), highlights: [i, j]});\r\n        if (array[i] <= array[j]) {\r\n            mergeArray.push(array[i++]);\r\n        } else {\r\n            mergeArray.push(array[j++]);\r\n        }\r\n    }\r\n    while (i < splitIdx) {\r\n        addToHistory({array: array.slice(), highlights: [i, j-1]});\r\n        mergeArray.push(array[i++]);\r\n    }\r\n    while (j <= end) {\r\n        addToHistory({array: array.slice(), highlights: [i-1, j]});\r\n        mergeArray.push(array[j++]);\r\n    }\r\n\r\n    for (let k = 0; k < mergeArray.length; k++) {\r\n        addToHistory({array: array.slice(), highlights: [start+k]});\r\n        array[start+k] = mergeArray[k];\r\n    }\r\n\r\n    return array;\r\n}\r\n","export function sort(props) {\r\n    const start = 0;\r\n    const end = props.array.length-1;\r\n    const sortedArray = quickSort(props.array, start, end, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction quickSort(array, start, end, addToHistory) {\r\n    if (end <= start) return array;\r\n    const p = partition(array, start, end, addToHistory);\r\n    quickSort(array, start, p-1, addToHistory);\r\n    quickSort(array, p+1, end, addToHistory);\r\n    return array;\r\n}\r\n\r\nfunction partition(array, start, end, addToHistory) {\r\n    if (end <= start) return start;\r\n\r\n    const pivot = array[start];\r\n    let i = start + 1;\r\n    let j = end;\r\n    while (true) {\r\n        while (array[i] <= pivot && i < j) {\r\n            addToHistory({array: array.slice(), highlights: [start, i, j]});\r\n            i += 1;\r\n        }\r\n        while (array[j] > pivot && i <= j) {\r\n            addToHistory({array: array.slice(), highlights: [start, i, j]});\r\n            j -= 1;\r\n        }\r\n        if (i < j) {\r\n            addToHistory({array: array.slice(), highlights: [start, i, j]});\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n            addToHistory({array: array.slice(), highlights: [start, i, j]});\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    \r\n    addToHistory({array: array.slice(), highlights: [start, j]});\r\n    // Swap pivot into position\r\n    [array[start], array[j]] = [array[j], array[start]];\r\n    addToHistory({array: array.slice(), highlights: [start, j]});\r\n    \r\n    let pivotIndex = j;\r\n    return pivotIndex;\r\n}\r\n","// Optimizing using 3-way principle\r\n// https://www.techiedelight.com/quicksort-using-dutch-national-flag-algorithm/\r\n// https://www.geeksforgeeks.org/3-way-quicksort-dutch-national-flag/\r\n\r\n// Optimizing using tail call\r\n// https://www.geeksforgeeks.org/quicksort-tail-call-optimization-reducing-worst-case-space-log-n/\r\n\r\nimport { range, randomIntFromInterval } from '../sortingAlgorithms/util';\r\n\r\nexport function sort(props) {\r\n    const array = props.array;\r\n    const start = 0;\r\n    const end = array.length-1;\r\n    const sortedArray = quickSort(array, start, end, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction quickSort(array, start, end, addToHistory) {\r\n    // Loop for tail call optimization.\r\n    while (start < end) {\r\n        const [pivotLeft, pivotRight] = partition(array, start, end, addToHistory);\r\n        if (pivotLeft - start < end - pivotRight) {\r\n            quickSort(array, start, pivotLeft-1, addToHistory);\r\n            start = pivotRight + 1;\r\n        }\r\n        else {\r\n            quickSort(array, pivotRight+1, end, addToHistory);\r\n            end = pivotLeft - 1;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction partition(array, start, end, addToHistory) {\r\n    if (end <= start) return [start, end];\r\n\r\n    //  If this section has more than 5 elements\r\n    if (end - start + 1 > 5) {\r\n        // Choose pivot at random to reduce chance of O(n^2) worst case.\r\n        let pivotIndex = randomIntFromInterval(start, end);\r\n        addToHistory({array: array.slice(), highlights: [start, pivotIndex]});\r\n        [array[start], array[pivotIndex]] = [array[pivotIndex], array[start]];\r\n        addToHistory({array: array.slice(), highlights: [start, pivotIndex]});\r\n    }\r\n\r\n    let mid = start + 1;\r\n    let pivot = array[start];\r\n\r\n    while (mid <= end) {\r\n        addToHistory({array: array.slice(), highlights: [start, mid, end]});\r\n        if (array[mid] < pivot) {\r\n            [array[start], array[mid]] = [array[mid], array[start]];\r\n            addToHistory({array: array.slice(), highlights: [start, mid]});\r\n            start++;\r\n            mid++;\r\n        } \r\n        else if (array[mid] > pivot) {\r\n            [array[mid], array[end]] = [array[end], array[mid]];\r\n            addToHistory({array: array.slice(), highlights: [start, mid, end]});\r\n            end--;\r\n        } \r\n        else {\r\n            mid++;\r\n        }\r\n    }\r\n    // start is now our left pivot position (inclusive)\r\n    // end is now our right pivot position (inclusive)\r\n    // this means that everything within the pivotRange is equal to our pivot\r\n    let pivotRange = range(start, end+1);\r\n    addToHistory({array: array.slice(), highlights: pivotRange.slice()});\r\n    return [start, end];\r\n}\r\n","export function sort(props){\r\n    const sortedArray = selectionSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction selectionSort(array, addToHistory){\r\n    if (array.length <= 1) {return array};\r\n    let length = array.length;\r\n\r\n    for (let startIndex = 0; startIndex < length; startIndex++){\r\n        let minVal = array[startIndex];\r\n        let minIndex = startIndex;\r\n        for (let i = startIndex; i < length; i++){\r\n            addToHistory({array: array.slice(), highlights: [startIndex, i, minIndex]})\r\n            if (minVal > array[i]){\r\n                minVal = array[i];\r\n                minIndex = i;\r\n            }\r\n        }\r\n\r\n        addToHistory({array: array.slice(), highlights: [startIndex, minIndex]});\r\n        [array[startIndex], array[minIndex]] = [array[minIndex], array[startIndex]];\r\n        addToHistory({array: array.slice(), highlights: [startIndex, minIndex]});\r\n    }\r\n    return array;\r\n}","export function sort(props) {\r\n    const sortedArray = shellSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction shellSort(array, addToHistory) {\r\n    // Generate gaps sequence\r\n    let h = 1;\r\n    while (h < array.length) {\r\n        h = 3*h +1;\r\n    }\r\n\r\n    while (h > 1) {\r\n        h = Math.floor(h/3);\r\n        for (let i = h; i < array.length; i++) {\r\n            let key = array[i];\r\n            let j = i;\r\n            addToHistory({array: array.slice(), highlights: [i, j-h]});\r\n            while (key < array[j-h]) {\r\n                array[j] = array[j-h];\r\n                addToHistory({array: array.slice(), highlights: [j, j-h]});\r\n                j = j-h;\r\n                if (j < h) break;\r\n            }\r\n            array[j] = key;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n","// About half of the code in this file was borrowed from\r\n// https://www.geeksforgeeks.org/timsort/\r\n\r\nimport { range } from \"./util\";\r\n\r\nexport function sort(props) {\r\n    const sortedArray = timSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nconst MIN_MERGE = 16;\r\n\r\nfunction timSort(array, addToHistory) {\r\n    let n = array.length;\r\n    const minRun = calculateMinRun(n);\r\n\r\n    for (let start = 0; start < n; start += minRun) {\r\n        const end = Math.min(start + minRun - 1, n - 1);\r\n        insertionSort(array, start, end, addToHistory);\r\n    }\r\n\r\n    let size = minRun;\r\n    while (size < n) {\r\n        for (let start = 0; start < n; start += 2 * size) {\r\n            const split = Math.min(n - 1, start + size - 1);\r\n            const end = Math.min((start + 2 * size - 1), (n - 1));\r\n            if (split < end) {\r\n                merge(array, start, split, end, addToHistory);\r\n            }\r\n        }\r\n        size *= 2;\r\n    }\r\n    return array;\r\n}\r\n\r\n// Find the minimum run length that's optimal for merging\r\nfunction calculateMinRun(n) {\r\n    let r = 0;\r\n    while (n >= MIN_MERGE) {\r\n        r |= (n & 1);\r\n        n >>= 1;\r\n    }\r\n    return n + r;\r\n}\r\n\r\nfunction insertionSort(array, start, end, addToHistory) {\r\n    if (end <= start) return array;\r\n    // Show the current section that's being sorted\r\n    addToHistory({array: array.slice(), highlights: range(start, end+1)});\r\n    // Sort the section using insertion method\r\n    for (let i = start+1; i < end+1; i++) {\r\n        let j = i;\r\n        addToHistory({array: array.slice(), highlights: [j-1, j]});\r\n        while (j > start && array[j] < array[j-1]) {\r\n            [array[j-1], array[j]] = [array[j], array[j-1]];\r\n            addToHistory({array: array.slice(), highlights: [j-1, j]});\r\n            j--;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction merge(array, start, split, end, addToHistory) {\r\n    if (end <= start) return array;\r\n\r\n    // Show the current section that's being sorted\r\n    addToHistory({array: array.slice(), highlights: range(start, end+1)});\r\n    let mergeArray = [];\r\n    let i = start, j = split+1;\r\n    while (i <= split && j <= end) {\r\n        addToHistory({array: array.slice(), highlights: [i, j]});\r\n        if (array[i] <= array[j]) {\r\n            mergeArray.push(array[i++]);\r\n        } else {\r\n            mergeArray.push(array[j++]);\r\n        }\r\n    }\r\n\r\n    while (i <= split) {\r\n        addToHistory({array: array.slice(), highlights: [i, j-1]});\r\n        mergeArray.push(array[i++]);\r\n    }\r\n    while (j <= end) {\r\n        addToHistory({array: array.slice(), highlights: [i-1, j]});\r\n        mergeArray.push(array[j++]);\r\n    }\r\n\r\n    for (let k = 0; k < mergeArray.length; k++) {\r\n        addToHistory({array: array.slice(), highlights: [start+k]});\r\n        array[start+k] = mergeArray[k];\r\n    }\r\n\r\n    return array;\r\n}\r\n","import { range, isSorted } from './util';\r\n\r\nexport function sort(props) {\r\n    // The size of input for bogoSort is limited to 7 due to the factorial growth.\r\n    if (props.array.length > 7) return props.array.slice();\r\n    const sortedArray = bogoSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction bogoSort(array, addToHistory) {\r\n    let permutations = perm(array);\r\n    for (let i = 0; i < permutations.length; i++) {\r\n        addToHistory({array: permutations[i], highlights: range(0, array.length)});\r\n        if (isSorted(permutations[i])) {\r\n            return permutations[i];\r\n        }\r\n    }\r\n}\r\n\r\n// Generate permutations of an array, returns an array of arrays\r\n// https://stackoverflow.com/questions/37579994/generate-permutations-of-javascript-array\r\nfunction perm(xs) {\r\n    let output = [];\r\n  \r\n    for (let i = 0; i < xs.length; i = i + 1) {\r\n        let rest = perm(xs.slice(0, i).concat(xs.slice(i + 1)));\r\n    \r\n        if(!rest.length) {\r\n            output.push([xs[i]])\r\n        } else {\r\n            for(let j = 0; j < rest.length; j = j + 1) {\r\n            output.push([xs[i]].concat(rest[j]))\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\r\n","export function sort(props) {\r\n    const sortedArray = introSort(props.array, props.addToHistory);\r\n    props.addToHistory({array: sortedArray.slice(), highlights: []});\r\n    return sortedArray.slice();\r\n}\r\n\r\nfunction introSort(array, addToHistory) {\r\n\r\n}","import React from \"react\";\r\nimport styles from \"../styles/App.module.scss\"\r\nimport FadeIn from 'react-fade-in';\r\nconsole.log(styles)\r\n\r\nexport const WelcomeHeader = (props) => {\r\n    return(\r\n        <div className = {styles.welcomediv}>\r\n            <FadeIn delay = {300}>\r\n                <h1 className = {styles.welcome2}>sortify.io</h1> \r\n            </FadeIn>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from '../styles/NavBar.module.scss';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Button } from \"@material-ui/core\";\r\nimport {AiOutlineGithub} from '@react-icons/all-files/ai/AiOutlineGithub';\r\nimport { WelcomeHeader } from './WelcomeHeader';\r\n\r\nexport const Bar = (props) => {\r\n    return(\r\n        <div className = {styles.navbar}>     \r\n            <h2 className = {styles.author}>By: Tony & Ley</h2>\r\n            <WelcomeHeader/>\r\n            <div className = {styles.icons}>\r\n                <a href =\"https://github.com/ilaylow\"><AiOutlineGithub size = {55} style = {{marginRight: \"2.5%\"}}/></a>\r\n                <a href = \"https://github.com/CodingPengwing\"><AiOutlineGithub size = {55}/></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const StyledButton = styled(Button)({\r\n    color: \"white\",\r\n    backgroundColor: \"black\",\r\n    marginRight: \"2.5%\",\r\n    marginTop: \"2.5%\",\r\n    padding: \"0.5% 2%\",\r\n    transition: \"ease-in 0.2s\",\r\n\r\n    '&:hover': {\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n    }\r\n})","import React from 'react';\r\nimport { DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styles from \"../styles/Selector.module.scss\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport \"../styles/custom-dropdown.css\"\r\n\r\nimport { useState } from 'react';\r\nimport { styled, Button } from '@material-ui/core';\r\n\r\nconst StyledButton = styled(Button)({\r\n    marginRight: \"5%\",\r\n    fontFamily: \"monospace\",\r\n    fontSize: \"17px\",\r\n    textAlign: \"center\",\r\n    textTransform: \"uppercase\",\r\n    backgroundSize: \"200% auto\",\r\n    transition: \"0.25s ease-in\",\r\n    color: \"#FFF\",\r\n    width: \"200px\",\r\n    boxShadow: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\r\n    cursor: \"pointer\",\r\n    backgroundImage: \"linear-gradient(90deg, #00d2ff 0%, #3a7bd5 0%, #00d2ff 60%)\",\r\n\r\n    '&:hover':{\r\n        backgroundPosition: \"right bottom\",\r\n    }\r\n})\r\n\r\nconst StyledButton2 = styled(StyledButton)({\r\n    backgroundImage: \"linear-gradient(90deg, #00d2ff 0%, #3a7bd5 0%, #00d2ff 60%)\",\r\n    '&:hover':{\r\n        backgroundPosition: \"right bottom\",\r\n    }\r\n})\r\n\r\nconst PauseButton = styled(StyledButton)({\r\n    backgroundImage: \"linear-gradient(90deg, #00d2ff 0%, #3a7bd5 0%, #00d2ff 60%)\",\r\n    '&:hover':{\r\n        backgroundPosition: \"right bottom\",\r\n    }\r\n})\r\n\r\nconst ResumeButton = styled(StyledButton)({\r\n    backgroundImage: \"linear-gradient(90deg, #00d2ff 0%, #3a7bd5 0%, #00d2ff 60%)\",\r\n    '&:hover':{\r\n        backgroundPosition: \"right bottom\",\r\n    }\r\n})\r\n\r\nconst buttonStyle = {marginBottom: \"2%\"}\r\n\r\nexport const Selector = (props) => {\r\n\r\n    const [inputType, setInputType] = useState(\"Random\");\r\n    const [sortType, setSortType] = useState(\"Insertion Sort\");\r\n\r\n    function changeInput(type){\r\n        setInputType(type);\r\n        props.onChangeInput(type);\r\n    };\r\n\r\n    function changeSort(type){\r\n        setSortType(type);\r\n        props.onChangeSort(type);\r\n    };\r\n\r\n    return(\r\n        <div className = {styles.container}>\r\n            <div className = {styles.sliders}>\r\n                <div className = {styles.sliderDropdown}>\r\n                    <Typography gutterBottom style = {{fontFamily: \"monospace\", color: \"white\", marginTop: \"1%\", marginRight: \"4%\"}}>\r\n                        Array\r\n                    </Typography>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title={inputType} style = {{width: \"53%\"}}>\r\n                        <Dropdown.Item onClick = {()=>changeInput(\"Random\")}>Random Array</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeInput(\"Sorted\")}>Sorted Array</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeInput(\"Reverse Sorted\")}>Reverse Sorted Array</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeInput(\"Uniform\")}>Uniform Array</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeInput(\"Partial Uniform\")}>Partial Uniform Array</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <Typography gutterBottom style = {{fontFamily: \"monospace\", color: \"white\", marginLeft: \"4%\", marginRight: \"3%\"} }>\r\n                        Array Size\r\n                    </Typography>\r\n                    <Slider\r\n                        onChange = {(e, val) => {props.onChangeSize(val, inputType)}}\r\n                        defaultValue={(props.disableSlider)? 7 : 100}\r\n                        valueLabelDisplay=\"auto\"\r\n                        disabled = {props.disableSlider}\r\n                        step={1}\r\n                        min={5}\r\n                        max={100}\r\n                    />\r\n                </div>\r\n                <div className = {styles.sliderDropdown}>\r\n                    <Typography gutterBottom style = {{fontFamily: \"monospace\", color: \"white\", marginTop: \"1%\", marginRight: \"5%\"}}>\r\n                        Sort\r\n                    </Typography>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title={sortType} style = {{width: \"61%\"}}>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Insertion Sort\")}>Insertion Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Selection Sort\")}>Selection Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Bubble Sort\")}>Bubble Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Cocktail Shaker Sort\")}>Cocktail Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Quick Sort\")}>Quick Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Shell Sort\")}>Shell Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Bogo Sort\")}>Bogo Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Merge Sort\")}>Merge Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Gnome Sort\")}>Gnome Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Intro Sort\")}>Intro Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Quick Sort Optimized\")}>Optimized Quick Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Heap Sort\")}>Heap Sort</Dropdown.Item>\r\n                        <Dropdown.Item onClick = {()=>changeSort(\"Tim Sort\")}>Tim Sort</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <Typography gutterBottom style = {{fontFamily: \"monospace\", color: \"white\", marginRight: \"2%\"}}>\r\n                        Sorting Speed\r\n                    </Typography>\r\n                    <Slider\r\n                        onChange = {(e, val) => {props.onChangeSpeed(val)}}\r\n                        defaultValue={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={1}\r\n                        min={1}\r\n                        max={100}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className = {styles.buttons}>\r\n                <StyledButton style = {styles.buttonStyle} onClick = {() => {props.pause();props.sort()}}>Run</StyledButton>\r\n                <PauseButton style = {styles.buttonStyle} onClick = {() => props.pause()}>Pause</PauseButton>\r\n                <ResumeButton style = {styles.buttonStyle} onClick = {() => {console.log(\"\")}}>Resume</ResumeButton>              \r\n                <StyledButton2 style = {styles.buttonStyle} onClick = {() => props.reset()}>Reset</StyledButton2>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { randomIntFromInterval, range, shuffle } from '../sortingAlgorithms/util';\r\nimport { testSortingAlgorithms } from '../sortingAlgorithms/SortingTester';\r\nimport { sort as bogoSort } from '../sortingAlgorithms/bogoSort';\r\nimport { sort as bubbleSort } from '../sortingAlgorithms/bubbleSort';\r\nimport { sort as cocktailShakerSort } from '../sortingAlgorithms/cocktailShakerSort';\r\nimport { sort as gnomeSort } from '../sortingAlgorithms/gnomeSort';\r\nimport { sort as heapSort } from '../sortingAlgorithms/heapSort';\r\nimport { sort as insertionSort } from '../sortingAlgorithms/insertionSort';\r\nimport { sort as introSort } from '../sortingAlgorithms/introSort';\r\nimport { sort as mergeSort } from '../sortingAlgorithms/mergeSort';\r\nimport { sort as quickSort } from '../sortingAlgorithms/quickSort';\r\nimport { sort as quickSortOptimized } from '../sortingAlgorithms/quickSortOptimized';\r\nimport { sort as selectionSort } from '../sortingAlgorithms/selectionSort';\r\nimport { sort as shellSort } from '../sortingAlgorithms/shellSort';\r\nimport { sort as timSort } from '../sortingAlgorithms/timSort';\r\n\r\nimport { StyledButton } from '../components/NavBar';\r\nimport { Selector } from '../components/SortingSelector';\r\nimport styles from './SortingVisualizer.module.scss';\r\n\r\nvar ARRAY_SIZE = 100;\r\nvar ANIMATION_SPEED = 10;\r\nconst MIN_VALUE = 5;\r\nconst MAX_VALUE = 450;\r\nconst PRIMARY_COLOR = '#00a1c9';\r\nconst HIGHLIGHT_COLOR = '#832380';\r\n\r\nfunction Bar(props) {\r\n    var color = PRIMARY_COLOR;\r\n    if (props.highlighted) {\r\n        color = HIGHLIGHT_COLOR;\r\n    }\r\n    return (\r\n        <div \r\n            className={styles.arrayBar} \r\n            key={props.idx}\r\n            style={{height: `${props.value}px`, backgroundColor: color}}>\r\n        </div>    \r\n    );\r\n}\r\n\r\nclass Array extends React.Component {\r\n    renderBar(i) {\r\n        let highlighted = this.props.highlights.includes(i);\r\n        return (\r\n            <Bar\r\n                value={this.props.array[i]}\r\n                idx={i}\r\n                highlighted={highlighted}\r\n                key={i}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        var bars = [];\r\n        let i;\r\n        for (i=0; i < this.props.array.length; i++) {\r\n            bars.push(this.renderBar(i));\r\n        }\r\n        // Done to maintain the height of the array container\r\n        bars.push(<div \r\n            className={styles.arrayBar}\r\n            style={{height: MAX_VALUE + 30, backgroundColor: \"black\"}}\r\n            key={i}\r\n            >\r\n        </div>)\r\n\r\n        return (\r\n            <div className={styles.array}>\r\n                {bars}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            highlights: [],\r\n            sortType: insertionSort,\r\n            timeoutIDArray: [],\r\n            resumePoint: 0,\r\n            disableSlider: false,\r\n            arrayState: \"random\",\r\n        };\r\n\r\n        this.history = [];\r\n\r\n        this.updateState = (array, highlights, resumePoint) => {\r\n            this.setState({array: array, highlights: highlights, resumePoint: resumePoint});\r\n        };\r\n\r\n        this.addToHistory = (props) => {\r\n            this.history.push({\r\n                array: props.array.slice(), \r\n                highlights: props.highlights.slice()\r\n            });\r\n        };\r\n\r\n        this.clearHistory = () => {\r\n            this.history = [];\r\n        }\r\n\r\n        this.changeInput = this.changeInput.bind(this);\r\n        this.changeSort = this.changeSort.bind(this);\r\n        this.doSort = this.doSort.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.pause = this.pause.bind(this);\r\n        this.onChangeArraySize = this.onChangeArraySize.bind(this);\r\n        this.onChangeSortSpeed = this.onChangeSortSpeed.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateRandomArray();\r\n    }\r\n\r\n    changeInput(inputType){\r\n        switch (inputType) {\r\n            case \"Random\":\r\n                this.generateRandomArray();\r\n                break;\r\n            case \"Steady\":\r\n                this.generateSteadyArray();\r\n                break;\r\n            case \"Sorted\":\r\n                this.generateSortedArray();\r\n                break;\r\n            case \"Reverse Sorted\":\r\n                this.generateReverseSortedArray();\r\n                break;\r\n            case \"Uniform\":\r\n                this.generateUniformArray();\r\n                break;\r\n            case \"Partial Uniform\":\r\n                this.generatePartialUniformArray();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    changeSort(sortType){\r\n        if (sortType === \"Bogo Sort\"){\r\n            this.setState({disableSlider: true});\r\n            ARRAY_SIZE = 7;\r\n            this.generateRandomArray();\r\n        } \r\n        else {\r\n            if (this.state.disableSlider) {\r\n                this.setState({disableSlider: false});\r\n                ARRAY_SIZE = 100;\r\n                this.generateRandomArray();\r\n            }\r\n        }\r\n\r\n        switch (sortType) {\r\n            case \"Bogo Sort\":\r\n                this.setState({sortType: bogoSort});\r\n                break;\r\n            case \"Bubble Sort\":\r\n                this.setState({sortType: bubbleSort});\r\n                break;\r\n            case \"Cocktail Shaker Sort\":\r\n                this.setState({sortType: cocktailShakerSort});\r\n                break;\r\n            case \"Gnome Sort\":\r\n                this.setState({sortType: gnomeSort});\r\n                break;\r\n            case \"Heap Sort\":\r\n                this.setState({sortType: heapSort});\r\n                break;\r\n            case \"Insertion Sort\":\r\n                this.setState({sortType: insertionSort});\r\n                break;\r\n            case \"Intro Sort\":\r\n                this.setState({sortType: introSort});\r\n                break;\r\n            case \"Merge Sort\":\r\n                this.setState({sortType: mergeSort});\r\n                break;\r\n            case \"Quick Sort\":\r\n                this.setState({sortType: quickSort});\r\n                break;\r\n            case \"Quick Sort Optimized\":\r\n                this.setState({sortType: quickSortOptimized});\r\n                break;\r\n            case \"Selection Sort\":\r\n                this.setState({sortType: selectionSort});\r\n                break;\r\n            case \"Shell Sort\":\r\n                this.setState({sortType: shellSort});\r\n                break;\r\n            case \"Tim Sort\":\r\n                this.setState({sortType: timSort});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    generateRandomArray() {\r\n        const gap = Math.floor((MAX_VALUE - MIN_VALUE) / ARRAY_SIZE);\r\n\r\n        const array = [];\r\n        for (let i=0; i < ARRAY_SIZE; i++) {\r\n            array.push(MIN_VALUE + gap * randomIntFromInterval(0, Math.floor(MAX_VALUE/gap)));\r\n        }\r\n\r\n        this.updateState(array.slice(), []);\r\n    }\r\n\r\n    generateSteadyArray() {\r\n        const gap = Math.floor((MAX_VALUE - MIN_VALUE) / ARRAY_SIZE);\r\n        const multipliers = range(0, ARRAY_SIZE);\r\n        shuffle(multipliers);\r\n        const array = [];\r\n        for (let i = 0; i < multipliers.length; i++) {\r\n            array.push(MIN_VALUE + gap * multipliers[i]);\r\n        }\r\n        this.updateState(array.slice(), []);\r\n    }\r\n\r\n    generateSortedArray() {\r\n        const gap = Math.floor((MAX_VALUE - MIN_VALUE) / ARRAY_SIZE);\r\n        const array = [];\r\n        for (let i = 0; i < ARRAY_SIZE; i++) {\r\n            array.push(MIN_VALUE + gap * i);\r\n        }\r\n        this.updateState(array.slice(), []);\r\n    }\r\n\r\n    generateReverseSortedArray() {\r\n        const gap = Math.floor((MAX_VALUE - MIN_VALUE) / ARRAY_SIZE);\r\n        const array = [];\r\n        for (let i = ARRAY_SIZE - 1; i >= 0; i--) {\r\n            array.push(MIN_VALUE + gap * i);\r\n        }\r\n        this.updateState(array.slice(), []);\r\n    }\r\n\r\n    generateUniformArray() {\r\n        const value = randomIntFromInterval(Math.floor(MAX_VALUE/2), MAX_VALUE);\r\n        const array = [];\r\n        for (let i = 0; i < ARRAY_SIZE; i++) { \r\n            array[i] = value; \r\n        }\r\n        this.updateState(array.slice(), []);\r\n    }\r\n\r\n    generatePartialUniformArray() {\r\n        const diffValues = 5;\r\n        const gap = Math.floor((MAX_VALUE - MIN_VALUE) / diffValues);\r\n        const values = [];\r\n        for (let i = 1; i <= diffValues; i++) {\r\n            values.push(MIN_VALUE + i * gap);\r\n        }\r\n\r\n        const array = [];\r\n        for (let i = 0; i < diffValues; i++) {\r\n            for (let j = 0; j < Math.floor(ARRAY_SIZE/diffValues); j++) {\r\n                array.push(MIN_VALUE + values[i]);\r\n            }\r\n        }\r\n\r\n        while (array.length < ARRAY_SIZE) {\r\n            array.push(MIN_VALUE + values[randomIntFromInterval(0, 4)]);\r\n        }\r\n        shuffle(array);\r\n        this.updateState(array.slice(), []);\r\n    }\r\n\r\n    reset() {\r\n        if (this.history.length > 0) {\r\n            const firstState = this.history[0];\r\n            this.updateState(firstState.array.slice(), []);\r\n        }\r\n        this.pause();\r\n        this.clearHistory();\r\n    }\r\n\r\n    pause(){\r\n        let arrLen = this.state.timeoutIDArray.length;\r\n        for (let i=this.state.resumePoint; i < arrLen; i++){\r\n            clearTimeout(this.state.timeoutIDArray[i]);\r\n        }\r\n    }\r\n\r\n    animateHistory() {\r\n        for (let i=0; i<this.history.length; i++) {\r\n            let timeoutID = setTimeout(() => {this.updateState(this.history[i].array, this.history[i].highlights, i)}, ANIMATION_SPEED*i);\r\n            this.state.timeoutIDArray.push(timeoutID);\r\n        }\r\n    }\r\n\r\n    doSort() {\r\n        this.clearHistory();\r\n        const sortedArray = this.state.sortType({\r\n            array: this.state.array, \r\n            addToHistory: this.addToHistory\r\n        });\r\n\r\n        this.animateHistory();\r\n        return sortedArray.slice();\r\n    }\r\n\r\n    onChangeArraySize(size, arrayType){\r\n        if (ARRAY_SIZE !== size) {\r\n            ARRAY_SIZE = size;\r\n            switch (arrayType) {\r\n                case \"Random\":\r\n                    this.generateRandomArray();\r\n                    break;\r\n                case \"Sorted\":\r\n                    this.generateSortedArray();\r\n                    break;\r\n                case \"Reverse Sorted\":\r\n                    this.generateReverseSortedArray();\r\n                    break;\r\n                case \"Uniform\":\r\n                    this.generateUniformArray();\r\n                    break;\r\n                case \"Partial Uniform\":\r\n                    this.generatePartialUniformArray();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeSortSpeed(speed) {\r\n        if (ANIMATION_SPEED !== speed) {\r\n            let percentageSpeed = speed / 100;\r\n            ANIMATION_SPEED = 510 - (500 * percentageSpeed);\r\n            this.pause();\r\n            let count = 1;\r\n            for (let i=this.state.resumePoint; i<this.history.length; i++){\r\n                let timeoutID = setTimeout(() => {this.updateState(this.history[i].array, this.history[i].highlights, i)}, ANIMATION_SPEED*count);\r\n                this.state.timeoutIDArray.push(timeoutID);\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Selector onChangeInput = {this.changeInput} onChangeSort = {this.changeSort} sort = {this.doSort}\r\n                reset = {this.reset} pause = {this.pause} onChangeSize = {this.onChangeArraySize}\r\n                onChangeSpeed = {this.onChangeSortSpeed} disableSlider={this.state.disableSlider}/>\r\n                <div className = {styles.arrayContainer}>\r\n                    <Array\r\n                        array={this.state.array}\r\n                        highlights={this.state.highlights}\r\n                    />\r\n                </div>\r\n                {/*<div className={styles.buttons}>\r\n                    <StyledButton onClick={() => this.test()}>Run Tests</StyledButton>\r\n                </div>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import AppStyles from './styles/App.module.scss';\r\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\r\nimport {Bar} from './components/NavBar';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={AppStyles.App}>\r\n      <Bar/>\r\n      <SortingVisualizer/>\r\n\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}